Today's schedule:
- Review
- Actions practice
- JSExecutor practice

Thursday's schedule:
- Page Object Model (POM)
- Synchronization - explicit wait

Friday: Selenium Review

*** Create Cucumber project until Monday's class ***

-----------------------------------------------------------------------------------------------------------------------

ACTIONS:

Why do we need Actions class?
-To handle "advanced" mouse and keyboard actions

Such as: - moveToElement()
         - clickAndHold()
         - dragAndDrop()
         - contextClick() --> right clicking
         - doubleClick()
         - pause()
         - perform() --> you have to use this method at the end of actions method
         - keyDown(): imitates as if user presses a key from keyboard and holds it down
         - keyUp(): imitates as if user lets go (release) a key that is already used by keyDown() method

How do we create Actions object?
#1. We create Actions class object
#2. We pass driver (Driver.getDriver) instance into Actions' constructor
#3. Now we can use this object for the methods coming from Actions class
#4. We have to use .perform() method at the end of actions methods

-----------------------------------------------------------------------------------------------------------------------

JAVASCRIPTEXECUTOR:

What os JavaScriptExecutor?
-It is a simple interface coming from Selenium library that allows us to inject (pass)
JavaScript methods (functions) into our Java-Selenium code

Why do we need it?
-Because it is a very strong web development language
-Therefore it is useful to be able to pass javascript code into Java-Selenium code for some vertain situations

How do we use JavaScriptExecutor?
1. We need to downcast(typecast) our driver to JavaScriptExecutor
2. Now we can use the method coming from JavaScriptExecutor
3. We pass ou JavaScript methods into .executeScript() method which will apply it in to our driver session

Syntax
            JavaScriptExecutor js - ((JavaScriptExecutor)Driver.getDriver);
#1.         js.executeScript("window.scrollBy(x,y)")

#2.         js.executeScript("arguments[0].scrollIntoView(true)",element1,element2element3)

            if you want to reach element1 --> you will use arguments[0]
            if you want to reach element2 --> you will use arguments[1]
            if you want to reach element3 --> you will use arguments[2]

-----------------------------------------------------------------------------------------------------------------------

P.I.Q:

How many ways do you know how to scroll?

-There are 3 ways of scrolling
#1 It is coming from JavaScriptExecutor: js.executeScript("window.scrollBy(x,y)")
#2 It is coming from JavaScriptExecutor: js.executeScript("arguments[0].scrollIntoView(true)" element1)
#3. PageUp, PageDown keys using keyboard actions
#4. We can use moveToElement() method from Actions class



